{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTACaA,G,YAAO,SAAAC,GACjB,OAAQ,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAKL,EAAMG,QAAQG,OAC/F,6BAAKN,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCHlBC,EAAW,SAACR,GACtB,OACE,qBAAKC,UAAU,YAAf,SAEGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAAW,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJ5CO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACnC,OACI,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAWF,MC0CNG,G,wDAzBb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAW,GACXS,YAAa,IAJJ,E,gEAQO,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACf,SAASc,S,+BAE/B,IAAD,SACyBE,KAAKR,MAA7BR,EADD,EACCA,SAASS,EADV,EACUA,YACVQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAAIA,EAAQG,KAAKsB,cAAcC,SAASX,MACxF,OACE,sBAAKjB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAUvB,SAAUiB,W,GArBVO,cCZHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04f2e7af.chunk.js","sourcesContent":["import '../../components/card/card.css'\r\nexport const Card = props => {\r\n   return( <div className=\"card-container\">\r\n             <img src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`} alt={props.monster.name}/>  \r\n             <h2>{props.monster.name}</h2> \r\n             <p>{props.monster.email}</p>   \r\n           </div> \r\n    )  \r\n}","import '../card-list/card-list.css';\r\nimport {Card} from '../card/card.component'\r\nexport const CardList = (props) => {\r\n   return (\r\n     <div className=\"card-list\"> \r\n      { \r\n        props.monsters.map((monster)=><Card key={monster.id} monster={monster}/>)\r\n      }\r\n     </div> \r\n   )\r\n}","import React from 'react';\r\nimport '../search-box/search-box.styles.css';\r\nexport const SearchBox = ({placeholder,handleChange}) => {\r\n    return (\r\n        <input \r\n          className=\"search\"\r\n          type='search' \r\n          placeholder={placeholder}\r\n          onChange= {handleChange} />\r\n    )\r\n}\r\n","import {Component} from 'react';\nimport {CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport '../src/App.css'\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//          This is a First React App \n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchField: []\n    }\n  }\n  //Life Cycle of a Component\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=>response.json())\n    .then(data => this.setState({monsters:data}))\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField));\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={e=> this.setState({searchField : e.target.value})}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    ); \n  }  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}